<html>
<!-- 

8/26/2006  Steve Bower     sforce@stevebower.com

Available for Salesforce.com Consulting.


This S-Control will Generate mailing labels from an Account or Campaign object. 

In the case of Campaign you can create labels from either the Contacts or the Leads assigned 
to the Campaign.


This is a relatively trivial app, it's just handy, so I thought I would post it to the App Exchange.





Methodology:

There is nothing cute or clever about this.  I went to the Avery.com website where they have a library
of Blank Templates:  http://www.avery.com/us/Main?action=software.BlankTPLCategory&catalogcode=WEB01&node=10194405

I downloaded a few, and brought them into Microsoft Word.  Then, saved them as .XML files.  
Then dug through them, to figure out the sequences they use and re-created them.  It's not 
pretty, but it was fast and effective.  There's a lot of similarity between the structures
of the various layouts, and it could probably be compressed further, etc. if anybody want
to bother.

Either way, feel free to add more styles, etc.

If you make any substantial improvements or changes, and you feel like sharing, send your
notes, code, thoughts, etc. to me at sforce@stevebower.com.


About Steve:

Steve is currently a freelance programmer in San Francisco who has taken a liking to Salesforce.com, 
their business model, and technical framework.  So, he's been consulting with various companies, 
both for-profit and non-profit, on S-Controls and system integrations.

He's available for consulting work at sforce@stevebower.com


 -->
	<head>
		<title></title>
		<script language="javascript" src="https://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js?browser=true" type="text/javascript"></script>
		<script src="https://na1.salesforce.com/js/functions.js" type="text/javascript"></script>
	<link href="https://na1.salesforce.com/dCSS/Theme2/default/common.css" 
	type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet">
	<style>
		th,td{font-size: 11px !important;}
		
	   .tableclass
			{width:90%;} 
		.bottomRow
			{width:100%;}
	</style>
		
		
		
<!-- Override a few of the mistakes in the Beta 3.3 Salesforce code. -->
<script type="text/javascript">
// This is to get around the secure/insecure warning that shows in IE.
 Sforce.Client.prototype.createWait = function() {
	var w = Sforce.doc.getElementById("sfdc_waiter");
	if (w != undefined) {
		return w;
	} else {
		w = Sforce.doc.createElement("iframe");
		w.style.overflow = "visible";
		w.frameBorder = "no";
		//w.style.backgroundColor = "transparent";
		w.allowTransparency = true;
		w.id = "sfdc_waiter";
		w.name = "sfdc_waiter";
		w.src = "javascript:false;";  		// Added this.  sbower.
		return w;
	}
};
</script>

<script type="text/javascript">
// Don't know why, but if I include browser=true, the page never stops loading.
// In the sense that the loading icon never stops spinning.  However, turning off
// the busybox does the trick, so it must be related to that, but I'm not going
// to figure out why.
Sforce.Client.prototype.busyboxenabled = false;
</script>

<script type="text/javascript">
Sforce.QueryResult.prototype.SBower_loadSelectElement = function(selectElement, sorted, valueField, displayField, formatString) {
	this.sortf = function(x, y) {
		if (x.text < y.text) {
			return -1;
		} else if (x.text == y.text) {
			return 0 ;
		} else {
			return 1;
		}
	};
	if (selectElement.options == undefined) {
		var sel = Sforce.doc.getElementById(selectElement);
	} else {
		var sel = selectElement;
	}
	sel.options.length = 0;
	if (sel.ownerDocument != undefined) {
		var adoc = sel.ownerDocument;
	} else {
		var adoc = sel.document;
	}
	if (this.size > 0) {
		var options = new Array();
		for (var i=0;i<this.records.length;i++) {
			var vf = this.records[i].get(valueField);
			if (Sforce.Util.dltypeof(displayField).toLowerCase() == "array") {
				var df = formatString;
				for (var j=0;j<displayField.length;j++) {
					var regex = new RegExp(displayField[j], "g");
					if (formatString == undefined) {
// I also think this is goofy and would be better with:
						//df = this.records[i].get(displayField[j]);    // Old
						// Start of New.
						if (j==0) {
							df = this.records[i].get(displayField[j]);
						} else {
							df = df + " " + this.records[i].get(displayField[j]);
						}
						// End of New.
						
					} else {
						df = df.replace(regex, this.records[i].get(displayField[j]));
					}
				}
			} else {
				var df = this.records[i].get(displayField);
			}

/* This is the old code:
			var opt = adoc.createElement("OPTION");
			opt.value = vf;
			//opt.text = df;
			opt.appendChild(adoc.createTextNode(df));
			opt.record = this.records[i];
			options.push(opt);
*/
// Replaced with this line:
			options.push(new Option(df,vf));
		}
		if (sorted && sorted == true) {
			options = options.sort(this.sortf);
		}
		for (key in options) {
/* This is the old code:
			sel.appendChild(options[key]);
*/
// Replaced with this line.
			sel.options[sel.length] = options[key];
		}
		return;
	} else {
		return;
	}
};
</script>



<script id="clientEventHandlersJS" language="javascript">
		
<!-- 
function initPage() {
	sforceClient.registerInitCallback(setup);
	sforceClient.setLoginUrl("https://www.salesforce.com/services/Soap/u/7.0");
	sforceClient.init("{!API_Session_ID}", "{!API_Partner_Server_URL_70}", true);
}

function getBack(Id) {
	// This brings me back to the Objects overview page.
	var r = "{!Scontrol_URL}".split(/salesforce.com/);
	var whichId = "{!Account_ID}{!Campaign_ID}";  // set default, one will be blank.
	if (Id != null) whichId = Id;
	return r[0] + "salesforce.com/"+whichId;
}
function goBack(Id) {
	window.parent.parent.location.href = getBack(Id);
	return;
}

function loadFolderNames() {
	var t = document.getElementById("FolderList");
	if (t.options.length == 0) {
		var folders = sforceClient.Query(
			"select id, name from folder where isreadonly = false and (type='Document' or type='Report')");
		if (folders.size == 0) {
			// No folders existing.
			t.options[0] = new Option("-None-");
		} else {
			folders.SBower_loadSelectElement(t,true,"id","name");
		}
	}
	return;
}


function doNothing() {
	return;
}
function loadCacheWithObject(object) {
	// Issue a Describe call for Object since we know we'll eventually need it in the Cache.
	// But, we don't care about the results at the moment, just to load the cache for speed.
	sforceClient.DescribeSObject(object,doNothing);
	return;
}

function makeBaseName(input) {
	// First, change spaces to underscores
	// Second, remove non-word characters (which allows underscores)
	return (input.replace(/ /g,"_").replace(/\W/g,"").replace(/__/g,"_"));
}

function setup() {
	// alert("Debugging Entry");
	var parentType = document.getElementById("ParentType");
	var parentName = document.getElementById("ParentName");
	// Determine where I've been called from.
	if ( "{!Campaign_ID}" != "" ) {
		// I've been called from a Campaign.
		parentType.value = "Campaign"
		parentName.value = "{!Campaign_Name}";
		document.getElementById("baseName").value = makeBaseName(parentName.value);
		AccountOrCampaign = "Campaign";
		loadCacheWithObject("campaign");
		loadCacheWithObject("campaignmember");
	} else {
		if ("{!Account_ID}" != "" ) {
			// I've been called from an Account.
			parentType.value = "Account";
			parentName.value = "{!Account_Name}";
			document.getElementById("baseName").value = makeBaseName(parentName.value);
			AccountOrCampaign = "Account";
			loadCacheWithObject("account");
			
			// Disable the Campaign specific options for the Leads or Contacts Selection
			var LorC_C = document.getElementById("CampaignContactsOrLeads_Contacts");
			var LorC_L = document.getElementById("CampaignContactsOrLeads_Leads");
			var LorC_B = document.getElementById("CampaignContactsOrLeads_Both");
			LorC_C.disabled = true;
			LorC_L.disabled = true;
			LorC_B.disabled = true;
		} else {
			alert("This Custom Link can only be called from a Campaign or Account Object.");
			AccountOrCampaign = "Error";
		}
	}
		
	loadCacheWithObject("Contact");
	// in the HTML, if we click on Lead, we'll load the cache there.

	return;
}

function getCampaignMembers(query) {
	// Query the records.
	var campaignMembers = new Array(); 
	var cm = sforceClient.Query(query);
	if (Sforce.Util.dltypeof(cm) != "QueryResult") {
		alert("Error getting Campaign Members for campaign: " + thisCampaignName + "\nResult = " + cm);
		return;
	}	
	campaignMembers = campaignMembers.concat(cm.records);	
	while (cm.done == false) {
		cm = sforceClient.queryMore(cm.queryLocator);
		if (Sforce.Util.dltypeof(cm) != "QueryResult") {
			alert("Error getting Campaign Members for campaign: " + thisCampaignName + "\nResult = " + cm);
		}
		campaignMembers = campaignMembers.concat(cm.records);
	}
	cm = null; // garbage
	return campaignMembers;
}

function getRecordsFromCampaignMembers(campaignMembers,flds,referenceField,referenceType) {
	// Note Retrieve only gets 2000 at a time, and doesn't provide a retrieveMore structure, so we have
	// to do it ourselves.
	var records = new Array();
	var cStart = 0;
	var cEnd = cStart + 1999;
	if (cEnd > campaignMembers.length) cEnd = campaignMembers.length;
	var c;
	while (cStart < campaignMembers.length) {
		var subset = new Array();
		for (var j=cStart;j<cEnd;j++) {
			if (campaignMembers[j].get(referenceField) != null) {
				subset[subset.length] = campaignMembers[j].get(referenceField);
			}
		}
		c = sforceClient.Retrieve(flds,referenceType,subset);
		records = records.concat(c);
		c = null; // garbage
		cStart = cEnd;
		cEnd = cStart + 1999;
		if (cEnd > campaignMembers.length) cEnd = campaignMembers.length;
	}
	return records;
}

function getLeadRecords() {
	var thisCampaignId = "{!Campaign_ID}";
	var thisCampaignName = "{!Campaign_Name}";
	
	// Select the Campaign members for this Campaign.
	var q = "select campaignid, leadid, hasresponded from campaignmember where campaignid = '" + thisCampaignId + "'";
	var campaignMembers = getCampaignMembers(q);
	
	// Now load all the Lead fields that are requested.
	var flds;
	if ( TemplateType == "Standard") {
		flds = "lastname, firstname, salutation, street, city, state, postalcode, country, title, company";
	} else {
		flds = "lastname, firstname, salutation, mailing_street__c, mailing_city__c, mailing_state__c, mailing_zip__c, mailing_country__c, title, company";	
	}
	return getRecordsFromCampaignMembers(campaignMembers,flds,"leadid","lead");

}

function getContactRecords() {
	var thisCampaignId = "{!Campaign_ID}";
	var thisCampaignName = "{!Campaign_Name}";
	
	// Select the Campaign members for this Campaign.
	var q = "select campaignid, contactid, hasresponded from campaignmember where campaignid = '" + thisCampaignId + "'";
	var campaignMembers = getCampaignMembers(q);
	
	// Now load all the Contacts fields that are requested.
	var flds;
	if ( TemplateType == "Standard") {
		flds = "lastname, firstname, salutation, mailingstreet, mailingcity, mailingstate, mailingpostalcode, mailingcountry, title";
	} else {
		flds = "lastname, firstname, salutation, mailing_street__c, mailing_city__c, mailing_state__c, mailing_zip__c, mailing_country__c, title";
	}
	return getRecordsFromCampaignMembers(campaignMembers,flds,"contactid","contact");	
}

function getAccountRecords() {
	var thisAccount = "{!Account_ID}";
	var thisAccountName = "{!Account_Name}";
	
	// Select the Contact records for this Account.
	if ( TemplateType == "Standard") {
		flds = "lastname, firstname, salutation, mailingstreet, mailingcity, mailingstate, mailingpostalcode, mailingcountry, title";
	} else {
		flds = "lastname, firstname, salutation, mailing_street__c, mailing_city__c, mailing_state__c, mailing_zip__c, mailing_country__c, title";
	}
	var q = "select " + flds + " from contact where accountid = '" + thisAccount + "'";
	
	// Query the records.
	var records = new Array(); 
	var batch = sforceClient.Query(q);
	if (Sforce.Util.dltypeof(batch) != "QueryResult") {
		alert("Error getting Contacts for Account: " + thisAccountName + "\nResult = " + batch);
		return;
	}	
	records = records.concat(batch.records);	
	while (batch.done == false) {
		batch = sforceClient.queryMore(batch.queryLocator);
		if (Sforce.Util.dltypeof(batch) != "QueryResult") {
			alert("Error getting Contacts for Account: " + thisAccountName + "\nResult = " + batch);
		}
		records = records.concat(batch.records);
	}
	batch = null; // garbage
	return records;
}


function getRecords() {
	sforceClient.setBatchSize(2000);
	// If we are launched from a campaign, what are we loading, leads or contacts?
	if (AccountOrCampaign == "Campaign") {
		if (document.getElementById("CampaignContactsOrLeads_Leads").checked) {
			Campaign_LeadsOrContacts = "Leads";
			return getLeadRecords();
		}
		if (document.getElementById("CampaignContactsOrLeads_Contacts").checked) {
			Campaign_LeadsOrContacts = "Contacts";
			return getContactRecords();
		}
		if (document.getElementById("CampaignContactsOrLeads_Both").checked) {
			Campaign_LeadsOrContacts = "Both";
			return getContactRecords().concat((getLeadRecords()));
		}
	} else {
		// Launched from an Account.
		return getAccountRecords();
	}
}


function generate() {
	// Given the current Account, or Campaign, generate a file(s) containing shipping labels in the 
	// requested Avery styles.  If Contacts, only get the contacts that have not responded.
	// Attach the file as an attachment to the current object, or as a document in a folder.
	if (document.getElementById("select_5160").checked ||
		document.getElementById("select_5161").checked ||
		document.getElementById("select_5162").checked ||
		document.getElementById("select_5163").checked ) {
							
		TemplateType = (document.getElementById("TemplateType_Standard").checked) ? "Standard" : "Non-Profit";
		setJustification();
		
		try {
		// Get the data
		var records = getRecords();
			// Shouldn't be the case, but we'll check anyway.
			if (records.length > 0) {
				// for each style, handle it.
				generate_style(records,"select_5163","5163");
				generate_style(records,"select_5162","5162");
				generate_style(records,"select_5161","5161");
				generate_style(records,"select_5160","5160");
			} else {
				alert("There were no records to use for generating Labels.");
			}
		} catch(e) {
			alert("Exception loading data.\nPlease verify that you have selected the correct Template\n" + e);
		}
		goBack(); 	// In this case, we're either done, or 
					// we're likely to have to re-evaluate the Source, so go back either way.
	} else {
		alert("No Mailing Label styles were selected.");
		// In this case, stay in the s-control.
	}
}

function generate_style(records,checkbox,style) {
	var style_selector = document.getElementById(checkbox);
	if (style_selector.checked) {
		// make the labels
		var doc = doLabels(style,records);  
		
		// make the filename
		var docname = document.getElementById("baseName").value + "_" + AccountOrCampaign;
		if (AccountOrCampaign == "Campaign")
			docname = docname + "_" + Campaign_LeadsOrContacts;
		docname = docname + "_Labels_" + style + ".doc";

		// How do we want to save it?
		if (document.getElementById("AttachmentCheckbox").checked) {
			// we want it as an attachment
			if (AccountOrCampaign == "Account") {
				saveDocAsAttachment(doc,docname,"{!Account_ID}");
			} else {
				saveDocAsAttachment(doc,docname,"{!Campaign_ID}");
			}
		} else {
			// we want it as a document in a folder.
			// No need to check document.getElementById("FolderCheckbox") since they are a radio group.
			var folderList = document.getElementById("FolderList");
			var folderId = folderList.options[folderList.selectedIndex].value;
			saveDocAsDocument(doc,docname,folderId);
		}
		doc = null; // garbage
	}
}

function saveDocAsAttachment(doc,name,id) {
	// Now we have the labels, save it as an attachment for the current campaign.	
	try {
		var att = new Sforce.Dynabean("attachment");
		att.set("parentid",id);
		att.set("name",name);
		att.set("isprivate",0);
		att.set("body",doc);
		att.set("bodylength",doc.length+1);
		att.save();
	} catch(e) {
		alert("Exception saving labels as attachment.\n" + e);
	}
}

function saveDocAsDocument(doc,name,folderId) {
	try {
		var saveDoc = new Sforce.Dynabean("Document"); 
		saveDoc.set("FolderId",folderId);
		saveDoc.set("Name",name);
		saveDoc.set("Type","doc");
		saveDoc.set("Description",name);
		var uir = sforceClient.GetUserInfo();
		saveDoc.set("AuthorId",uir.id);
		saveDoc.set("Body",doc);
		saveDoc.set("BodyLength",doc.length);
		saveDoc.save();
	} catch(e) {
		alert("Exception saving labels as document.\n" + e);
	}
}

function getField(record,fld,add) {
	// Load the value of a field, if null, return a blank string.
	// If an optional "add" field is present, and if it is non blank, append the add field.
	var t;
	try {
		t = record.get(fld);
	} catch(e) {
		// Ok, something went wrong.  But we're not going to complain (because it's likely we'd complain every time)
		return "";
	}
	if (t == null) return "";

	// quick filter for some special characters which mess up the XML for Microsoft Word
	// &amp; &lt; &gt;
	t = t.replace(/&/g,"&amp;"); // Important to do Ampersands first so we don't mess up <> from the next two lines.
	t = t.replace(/>/g,"&gt;");
	t = t.replace(/</g,"&lt;");
	if (add == null) return t;
	return t + add;
}



var makeLabels;
var makeTextNode;
var makeEntry;
var makeHeader;
var makeFooter;
var makeDivider;
var makeRowHeader;
var makeRowFooter;

var TemplateType; // "Standard" or "Non-Profit"
var justification = '';  // Left or Centered justification.  If this is empty, it will be centered.

var AccountOrCampaign;  // "Account", "Campaign", or "Error" if called from an incorrect Object
var Campaign_LeadsOrContacts // "Leads" or "Contacts" or "Both", only if AccountOrCampaign == "Campaign"

var Encoding = "ISO-8859-1"


function doLabels(labelStyle, records) {
	switch(labelStyle) 
	{

	case "5160":
		makeLabels = makeLabels_5160;
		makeTextNode = makeTextNode_5160;
		makeEntry = makeEntry_5160;
		makeHeader = makeHeader_5160;
		makeFooter = makeFooter_5160;
		makeDivider = makeDivider_5160;
		makeRowHeader = makeRowHeader_5160;
		makeRowFooter = makeRowFooter_5160;
		break;
		
	case "5161":
		makeLabels = makeLabels_5161;
		makeTextNode = makeTextNode_5161;
		makeEntry = makeEntry_5161;
		makeHeader = makeHeader_5161;
		makeFooter = makeFooter_5161;
		makeDivider = makeDivider_5161;
		makeRowHeader = makeRowHeader_5161;
		makeRowFooter = makeRowFooter_5161;
		break;
		
	case "5162":
		makeLabels = makeLabels_5162;
		makeTextNode = makeTextNode_5162;
		makeEntry = makeEntry_5162;
		makeHeader = makeHeader_5162;
		makeFooter = makeFooter_5162;
		makeDivider = makeDivider_5162;
		makeRowHeader = makeRowHeader_5162;
		makeRowFooter = makeRowFooter_5162;
		break;

	case "5163":
		makeLabels = makeLabels_5163;
		makeTextNode = makeTextNode_5163;
		makeEntry = makeEntry_5163;

		makeHeader = makeHeader_5163;
		makeFooter = makeFooter_5163;
		makeDivider = makeDivider_5163;
		makeRowHeader = makeRowHeader_5163;
		makeRowFooter = makeRowFooter_5163;
		break;

	default:
		alert("Invalid Label style selected.");
	}
	
	return makeLabels(records)
}
	
			

function makeLabelsHelper(nCols, records) {
	// nCols = number of columns on a page.  
	// records = the data, if Empty, simply return null.
	if (records == null || records.length <= 0) return "";
	
	// Load the boilerplate
	var doc = "";
	doc += makeHeader();
	
	// before we start with data, have we been ased to skip any rows?
	var startRow = document.getElementById("startRow").value;
	for (var j=1; j<startRow; j++) {
		// generate a blank row as a placeholder.
		doc += makeRowHeader();
		for (var k=0; k < nCols-1; k++) {
			doc += makeEntry() + makeDivider();
		}
		doc += makeEntry() + makeRowFooter();
	}

	// Have we been asked to start in a different column?
	var startCol = document.getElementById("startCol").value
	if (startCol > nCols) startCol = nCols; //  if too large, go as far as possible.
	if (startCol < 1) startCol = 1; // just in case.
	
	// Figure out how many entries are needed to add any blank columns
	// requested, then finish all the data, and then complete the row.

	var dataStart = startCol - 1;
	var fillStart = dataStart + records.length; // Point one past end of data.
	var n = fillStart;
	if ((fillStart % nCols) != 0) n += (nCols - (fillStart % nCols));


	// j ranges over the colums to skip, the data, and the extra columns
	var m = 0; // to index into the data correctly.
	for (var j=0; j<n; j++) {
		// We need a new Row if we're at a multiple of the number of Columns.
		if ((j%nCols) == 0) {
			doc += makeRowHeader();
		}
		// If there are more entries to process, we need to add them, if not, empty ones.
		if ((j >= dataStart) && (j < fillStart)) {
			doc += makeEntry(records[m++]);
		} else {
			doc += makeEntry();
		}
		// We either need a Divider, or to end the current row
		// (and start a new row when we return to the loop.)
		if ((j+1)%nCols) {
		 	doc += makeDivider();
		} else {
 			doc += makeRowFooter();		 
		}
	}	
	// All done, add the boilerplate footer.	
	doc += makeFooter();
	return doc;
}

function makeLabels_5160(records) {
	return makeLabelsHelper(3,records);
}
function makeLabels_5161(records) {
	return makeLabelsHelper(2,records);
}
function makeLabels_5162(records) {
	return makeLabelsHelper(2,records);
}
function makeLabels_5163(records) {
	return makeLabelsHelper(2,records);
}

function setJustification() {
	if (document.getElementById("Left").checked) {
		justification = '<w:pPr><w:jc w:val="left"/></w:pPr>';
	} else {
		justification = '';  // default in the saved XML is centered.
	}
}

function makeTextNode_5160(t) {
	if (t == "" || t == null) return "";
    return '<w:p>' + justification + '<w:r><w:t>' + t + '</w:t></w:r></w:p>';
}

var makeTextNode_5161; makeTextNode_5161 = makeTextNode_5160;
var makeTextNode_5162; makeTextNode_5162 = makeTextNode_5160;
var makeTextNode_5163; makeTextNode_5163 = makeTextNode_5160;

function makeEntryHelper(width,record) {
	var t3 = "";
	if (record != null) {
		var nameField = getField(record,"salutation"," ");
		nameField = nameField + getField(record,"firstname"," ");
		nameField = nameField + getField(record,"lastname");
		
		var titleField = getField(record,"title")
		var companyField = "";
		// Only Leads have Company Names.  
		// (Contacts would have the related Account, but we're not going to go get those.)
		if (record.type == "Lead") companyField = getField(record,"Company");
		
		var streetField;
		var cityStateZipField;
		var countryField;
		if (TemplateType == "Non-Profit") {
			// In the non-profit template, Leads and Contacts are the same Custom fields.
			streetField = getField(record,"mailing_street__c");
			cityStateZipField = getField(record,"mailing_city__c",", ")  + 
									getField(record,"mailing_state__c",".  ") + 
									getField(record,"mailing_zip__c");
			countryField = getField(record,"mailing_country__c");
		} else {
			// Standard Template
			if (record.type == "Lead") {
				streetField = getField(record,"street");
				cityStateZipField = getField(record,"city",", ")  + 
								getField(record,"state",", ") + 
								getField(record,"postalcode",".  ");
				countryField = getField(record,"country");	
			} else {
				streetField = getField(record,"mailingstreet");
				cityStateZipField = getField(record,"mailingcity",", ")  + 
								getField(record,"mailingstate",".  ") + 
								getField(record,"mailingpostalcode");
				countryField = getField(record,"mailingcountry");
			}
		}
		
		// For many contacts, they store all the address information in a single, multi-line
		// field, typically mailingstreet, instead of using the full range of mailingCity,
		// mailingState, etc.
		// So iff the last line is empty, AND the streetField has multiple lines in it, 
		// let's adjust to get the information correct.
		var fullAddress = "";
		if (cityStateZipField == "") {
			var lines = streetField.match(/^.*$/gm); // break on multiple lines
			if (lines.length > 1) {
				// Ok, let's clean things up.
				// Make a text node out of each line in the streetField
				for (var i=0;i<lines.length;i++) {
					fullAddress = fullAddress + makeTextNode(lines[i]);
				}
				// and now blank out other lines so we don't double-use them.
				streetField = "";
				cityStateZipField = "";
				countryField = "";
			}
		} else {
			fullAddress = makeTextNode(cityStateZipField);
		}
						
		var t3 = 	makeTextNode(nameField) + 
					makeTextNode(titleField) +
					makeTextNode(companyField) +
					makeTextNode(streetField) + 
					fullAddress +
					makeTextNode(countryField);
					
	}

	var t1 = '<w:tc>';
	var t2 = '<w:tcPr><w:tcW w:w="'+ width +'" w:type="dxa"/><w:vAlign w:val="center"/></w:tcPr>';
	
	// if we have an entry with data, don't put in the paragraph break
	var t4 = ((t3 != "")? "" : '<w:p/>') + '</w:tc>';
 
	// replace carriage returns or line feeds (as you might get in a multi-line text field) w/ spaces
	// because we didn't always clean everything above in all cases.
	var t5 = (t1 + t2 + t3 + t4).replace(/[\n\r]/g," ");
	
	nameField = titleField = companyField = streetField = countryField = cityStateZipField = null; // garbage
	t1 = t2 = t3 = t4 = null; // garbage
	return t5;
}

function makeEntry_5160(record) {
	return makeEntryHelper("3780",record);
}
function makeEntry_5161(record) {
	return makeEntryHelper("5760",record);
}
function makeEntry_5162(record) {
	return makeEntryHelper("5760",record);
}
function makeEntry_5163(record) {
	return makeEntryHelper("5760",record);
}

function makeDividerHelper(x) {
      return  '<w:tc>' +
                '<w:tcPr>' +
                  '<w:tcW w:w="' + x + '" w:type="dxa"/>' +
                  '<w:vAlign w:val="center"/>' +
                '</w:tcPr>' +
                '<w:p/>' +
              '</w:tc>';
}
              
function makeDivider_5160() {
	return makeDividerHelper("180");
}
function makeDivider_5161() {
	return makeDividerHelper("270");
}
function makeDivider_5162() {
	return makeDividerHelper("270");
}
function makeDivider_5163() {
	return makeDividerHelper("230");
}

function makeRowHeader_5160() {
	return  '<w:tr>' +
              '<w:tblPrEx>' +
                '<w:tblCellMar>' +
                  '<w:top w:w="0" w:type="dxa"/>' +
                  '<w:bottom w:w="0" w:type="dxa"/>' +
                '</w:tblCellMar>' +
              '</w:tblPrEx>' +
              '<w:trPr>' +
                '<w:cantSplit/>' +
                '<w:trHeight w:h-rule="exact" w:val="1440"/>' +
              '</w:trPr>';
}
function makeRowFooter_5160() {
	return '</w:tr>';
}
function makeRowHeader_5161() {
	return '<w:tr><w:trPr><w:cantSplit/><w:trHeight w:h-rule="exact" w:val="1440"/></w:trPr>';
}
function makeRowFooter_5161() {
	return '</w:tr>';
}
function makeRowHeader_5162() {
	return '<w:tr>' +
              '<w:tblPrEx>' +
                '<w:tblCellMar>' +
                  '<w:top w:w="0" w:type="dxa"/>' +
                  '<w:bottom w:w="0" w:type="dxa"/>' +
                '</w:tblCellMar>' +
              '</w:tblPrEx>' +
              '<w:trPr>' +
                '<w:cantSplit/>' +
                '<w:trHeight w:h-rule="exact" w:val="1920"/>' +
              '</w:trPr>';
}
function makeRowFooter_5162() {
	return '</w:tr>';
}
function makeRowHeader_5163() {
	return '<w:tr>' +
              '<w:tblPrEx>' +
                '<w:tblCellMar>' +
                  '<w:top w:w="0" w:type="dxa"/>' +
                  '<w:bottom w:w="0" w:type="dxa"/>' +
                '</w:tblCellMar>' +
              '</w:tblPrEx>' +
              '<w:trPr>' +
                '<w:cantSplit/>' +
                '<w:trHeight w:h-rule="exact" w:val="2880"/>' +
              '</w:trPr>';
}
function makeRowFooter_5163() {
	return '</w:tr>';
}

function makeFooter_5160() {
	var t = 
          '</w:tbl>' +
          '<w:p/>' +
          '<w:sectPr>' +
            '<w:pgSz w:w="12240" w:h="15840" w:code="1"/>' +
            '<w:pgMar w:top="720" w:right="274" w:bottom="0" w:left="274" w:header="720" w:footer="720" w:gutter="0"/>' +
            '<w:cols w:space="720"/>' +
            '<w:docGrid w:line-pitch="272"/>' +
          '</w:sectPr>' +
        '</wx:sect>' +
      '</w:body>' +
    '</w:wordDocument>';
    return t;
}

function makeFooter_5161() {
	var t = 
	   '</w:tbl>' +
          '<w:p/>' +
          '<w:sectPr>' +
            '<w:pgSz w:w="12240" w:h="15840" w:code="1"/>' +
            '<w:pgMar w:top="720" w:right="225" w:bottom="0" w:left="225" w:header="720" w:footer="720" w:gutter="0"/>' +
            '<w:cols w:space="720"/>' +
            '<w:docGrid w:line-pitch="272"/>' +
          '</w:sectPr>' +
        '</wx:sect>' +
      '</w:body>' +
    '</w:wordDocument>';
    return t;
}

function makeFooter_5162() {
	var t = 
	    '</w:tbl>' +
          '<w:p/>' +
          '<w:sectPr>' +
            '<w:pgSz w:w="12240" w:h="15840" w:code="1"/>' +
            '<w:pgMar w:top="1200" w:right="225" w:bottom="0" w:left="225" w:header="720" w:footer="720" w:gutter="0"/>' +
            '<w:cols w:space="720"/>' +
            '<w:docGrid w:line-pitch="272"/>' +
          '</w:sectPr>' +
        '</wx:sect>' +
      '</w:body>' +
    '</w:wordDocument>';
    return t;
}

function makeFooter_5163() {
	var t = 
	     '</w:tbl>' +
          '<w:p/>' +
          '<w:sectPr>' +
            '<w:pgSz w:w="12240" w:h="15840" w:code="1"/>' +
            '<w:pgMar w:top="720" w:right="245" w:bottom="0" w:left="245" w:header="720" w:footer="720" w:gutter="0"/>' +
            '<w:cols w:space="720"/>' +
            '<w:docGrid w:line-pitch="272"/>' +
          '</w:sectPr>' +
        '</wx:sect>' +
      '</w:body>' +
    '</w:wordDocument>';
    return t;
}

function makeHeader_5160() {
	var t = 
	'<?xml version="1.0" encoding="' + Encoding + '" standalone="yes"?>' + '\n' +
    '<?mso-application progid="Word.Document"?>' + '\n' +
    '<w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:sl="http://schemas.microsoft.com/schemaLibrary/2003/core" xmlns:aml="http://schemas.microsoft.com/aml/2001/core" xmlns:wx="http://schemas.microsoft.com/office/word/2003/auxHint" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" w:macrosPresent="no" w:embeddedObjPresent="no" w:ocxPresent="no" xml:space="preserve">' +
      '<o:DocumentProperties>' +
        '<o:Title>' +
'Avery Templates' +
        '</o:Title>' +
        '<o:Subject>' +
'Avery Template' +
        '</o:Subject>' +
        '<o:Author>' +
'Avery Dennison Corporation' +
        '</o:Author>' +
        '<o:Keywords>' +
'Avery Templates' +
        '</o:Keywords>' +
        '<o:Description>' +
'Copyright 2004 Avery Dennison Corporation. All rights reserved.' +
        '</o:Description>' +
        '<o:LastAuthor>' +
'Steve Bower' +
        '</o:LastAuthor>' +
        '<o:Revision>' +
'1' +
        '</o:Revision>' +
        '<o:TotalTime>' +
'1' +
        '</o:TotalTime>' +
        '<o:LastPrinted>' +
'2004-03-12T21:37:00Z' +
        '</o:LastPrinted>' +
        '<o:Created>' +
'2006-08-19T22:00:00Z' +
        '</o:Created>' +
        '<o:LastSaved>' +
'2006-08-19T22:00:00Z' +
        '</o:LastSaved>' +
        '<o:Pages>' +
        '</o:Pages>' +
        '<o:Words>' +
        '</o:Words>' +
        '<o:Characters>' +
        '</o:Characters>' +
        '<o:Category>' +
'Avery Templates' +
        '</o:Category>' +
        '<o:Company>' +
'Avery Dennison Corporation' +
        '</o:Company>' +
        '<o:Lines>' +
        '</o:Lines>' +
        '<o:Paragraphs>' +
        '</o:Paragraphs>' +
        '<o:CharactersWithSpaces>' +
        '</o:CharactersWithSpaces>' +
        '<o:Version>' +
'11.6568' +
        '</o:Version>' +
      '</o:DocumentProperties>' +
      '<w:fonts>' +
        '<w:defaultFonts w:ascii="Times New Roman" w:fareast="Times New Roman" w:h-ansi="Times New Roman" w:cs="Times New Roman"/>' +
      '</w:fonts>' +
      '<w:styles>' +
        '<w:versionOfBuiltInStylenames w:val="4"/>' +
        '<w:latentStyles w:defLockedState="off" w:latentStyleCount="156"/>' +
        '<w:style w:type="paragraph" w:default="on" w:styleId="Normal">' +
          '<w:name w:val="Normal"/>' +
          '<w:pPr>' +
            '<w:jc w:val="center"/>' +
          '</w:pPr>' +
          '<w:rPr>' +
            '<w:rFonts w:ascii="Arial" w:h-ansi="Arial"/>' +
            '<wx:font wx:val="Arial"/>' +
            '<w:b/>' +
            '<w:lang w:val="EN-US" w:fareast="EN-US" w:bidi="AR-SA"/>' +
          '</w:rPr>' +
        '</w:style>' +
        '<w:style w:type="character" w:default="on" w:styleId="DefaultParagraphFont">' +
          '<w:name w:val="Default Paragraph Font"/>' +
          '<w:semiHidden/>' +
        '</w:style>' +
        '<w:style w:type="table" w:default="on" w:styleId="TableNormal">' +
          '<w:name w:val="Normal Table"/>' +
          '<wx:uiName wx:val="Table Normal"/>' +
          '<w:semiHidden/>' +
          '<w:rPr>' +
            '<wx:font wx:val="Times New Roman"/>' +
          '</w:rPr>' +
          '<w:tblPr>' +
            '<w:tblInd w:w="0" w:type="dxa"/>' +
            '<w:tblCellMar>' +
              '<w:top w:w="0" w:type="dxa"/>' +
              '<w:left w:w="108" w:type="dxa"/>' +
              '<w:bottom w:w="0" w:type="dxa"/>' +
              '<w:right w:w="108" w:type="dxa"/>' +
            '</w:tblCellMar>' +
          '</w:tblPr>' +
        '</w:style>' +
        '<w:style w:type="list" w:default="on" w:styleId="NoList">' +
          '<w:name w:val="No List"/>' +
          '<w:semiHidden/>' +
        '</w:style>' +
      '</w:styles>' +
      '<w:shapeDefaults>' +
        '<o:shapedefaults v:ext="edit" spidmax="2050"/>' +
        '<o:shapelayout v:ext="edit">' +
          '<o:idmap v:ext="edit" data="1"/>' +
        '</o:shapelayout>' +
      '</w:shapeDefaults>' +
      '<w:docPr>' +
        '<w:view w:val="print"/>' +
        '<w:zoom w:percent="100"/>' +
        '<w:doNotEmbedSystemFonts/>' +
        '<w:proofState w:spelling="clean" w:grammar="clean"/>' +
        '<w:attachedTemplate w:val=""/>' +
        '<w:defaultTabStop w:val="720"/>' +
        '<w:drawingGridHorizontalSpacing w:val="187"/>' +
        '<w:drawingGridVerticalSpacing w:val="187"/>' +
        '<w:displayHorizontalDrawingGridEvery w:val="0"/>' +
        '<w:displayVerticalDrawingGridEvery w:val="0"/>' +
        '<w:useMarginsForDrawingGridOrigin/>' +
        '<w:drawingGridHorizontalOrigin w:val="1699"/>' +
        '<w:drawingGridVerticalOrigin w:val="1987"/>' +
        '<w:characterSpacingControl w:val="DontCompress"/>' +
        '<w:optimizeForBrowser/>' +
        '<w:validateAgainstSchema/>' +
        '<w:saveInvalidXML w:val="off"/>' +
        '<w:ignoreMixedContent w:val="off"/>' +
        '<w:alwaysShowPlaceholderText w:val="off"/>' +
        '<w:compat>' +
          '<w:footnoteLayoutLikeWW8/>' +
          '<w:shapeLayoutLikeWW8/>' +
          '<w:alignTablesRowByRow/>' +
          '<w:forgetLastTabAlignment/>' +
          '<w:doNotUseHTMLParagraphAutoSpacing/>' +
          '<w:layoutRawTableWidth/>' +
          '<w:layoutTableRowsApart/>' +
          '<w:useWord97LineBreakingRules/>' +
          '<w:dontAllowFieldEndSelect/>' +
          '<w:useWord7000000001nVleRules/>' +
        '</w:compat>' +
      '</w:docPr>' +
      '<w:body>' +
        '<wx:sect>' +
          '<w:tbl>' +
            '<w:tblPr>' +
              '<w:tblW w:w="0" w:type="auto"/>' +
              '<w:tblLayout w:type="Fixed"/>' +
              '<w:tblCellMar>' +
                '<w:left w:w="15" w:type="dxa"/>' +
                '<w:right w:w="15" w:type="dxa"/>' +
              '</w:tblCellMar>' +
            '</w:tblPr>' +
            '<w:tblGrid>' +
              '<w:gridCol w:w="3780"/>' +
              '<w:gridCol w:w="180"/>' +
              '<w:gridCol w:w="3780"/>' +
              '<w:gridCol w:w="180"/>' +
              '<w:gridCol w:w="3780"/>' +
            '</w:tblGrid>';
	return t;
}

function makeHeader_5161() {
	var t =  
	'<?xml version="1.0" encoding="' + Encoding + '" standalone="yes"?>' + '\n' +
    '<?mso-application progid="Word.Document"?>' + '\n' +
    '<w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:sl="http://schemas.microsoft.com/schemaLibrary/2003/core" xmlns:aml="http://schemas.microsoft.com/aml/2001/core" xmlns:wx="http://schemas.microsoft.com/office/word/2003/auxHint" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:st1="urn:schemas-microsoft-com:office:smarttags" w:macrosPresent="no" w:embeddedObjPresent="no" w:ocxPresent="no" xml:space="preserve">' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="place"/>' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="PlaceType"/>' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="PlaceName"/>' + 
      '<o:DocumentProperties>' + 
        '<o:Title>' + 
'Avery Templates' +
        '</o:Title>' + 
        '<o:Subject>' + 
'Avery Template' +
        '</o:Subject>' + 
        '<o:Author>' + 
'Avery Dennison Corporation' +
        '</o:Author>' + 
        '<o:Keywords>' + 
'Avery Templates' +
        '</o:Keywords>' + 
        '<o:Description>' + 
'Copyright 2004 Avery Dennison Corporation. All rights reserved.' +
        '</o:Description>' + 
        '<o:LastAuthor>' + 
'Steve Bower' +
        '</o:LastAuthor>' + 
        '<o:Revision>' + 
'1' +
        '</o:Revision>' + 
        '<o:TotalTime>' + 
'1' +
        '</o:TotalTime>' + 
        '<o:Created>' + 
'2006-08-11T07:28:00Z' +
        '</o:Created>' + 
        '<o:LastSaved>' + 
'2006-08-11T07:38:00Z' +
        '</o:LastSaved>' + 
        '<o:Pages>' + 
        '</o:Pages>' + 
        '<o:Words>' + 
        '</o:Words>' + 
        '<o:Characters>' + 
        '</o:Characters>' + 
        '<o:Category>' + 
'Avery Templates' +
        '</o:Category>' + 
        '<o:Company>' + 
'Avery Dennison Corporation' +
        '</o:Company>' + 
        '<o:Lines>' + 
        '</o:Lines>' + 
        '<o:Paragraphs>' + 
        '</o:Paragraphs>' + 
        '<o:CharactersWithSpaces>' + 
        '</o:CharactersWithSpaces>' + 
        '<o:Version>' + 
'11.6568' +
        '</o:Version>' + 
      '</o:DocumentProperties>' + 
      '<w:fonts>' + 
        '<w:defaultFonts w:ascii="Times New Roman" w:fareast="Times New Roman" w:h-ansi="Times New Roman" w:cs="Times New Roman"/>' + 
      '</w:fonts>' + 
      '<w:styles>' + 
        '<w:versionOfBuiltInStylenames w:val="4"/>' + 
        '<w:latentStyles w:defLockedState="off" w:latentStyleCount="156"/>' + 
        '<w:style w:type="paragraph" w:default="on" w:styleId="Normal">' + 
          '<w:name w:val="Normal"/>' + 
          '<w:rsid w:val="00ED4632"/>' + 
          '<w:pPr>' + 
            '<w:jc w:val="center"/>' + 
          '</w:pPr>' + 
          '<w:rPr>' + 
            '<w:rFonts w:ascii="Arial" w:h-ansi="Arial"/>' + 
            '<wx:font wx:val="Arial"/>' + 
            '<w:b/>' + 
            '<w:lang w:val="EN-US" w:fareast="EN-US" w:bidi="AR-SA"/>' + 
          '</w:rPr>' + 
        '</w:style>' + 
        '<w:style w:type="character" w:default="on" w:styleId="DefaultParagraphFont">' + 
          '<w:name w:val="Default Paragraph Font"/>' + 
          '<w:semiHidden/>' + 
        '</w:style>' + 
        '<w:style w:type="table" w:default="on" w:styleId="TableNormal">' + 
          '<w:name w:val="Normal Table"/>' + 
          '<wx:uiName wx:val="Table Normal"/>' + 
          '<w:semiHidden/>' + 
          '<w:rPr>' + 
            '<wx:font wx:val="Times New Roman"/>' + 
          '</w:rPr>' + 
          '<w:tblPr>' + 
            '<w:tblInd w:w="0" w:type="dxa"/>' + 
            '<w:tblCellMar>' + 
              '<w:top w:w="0" w:type="dxa"/>' + 
              '<w:left w:w="108" w:type="dxa"/>' + 
              '<w:bottom w:w="0" w:type="dxa"/>' + 
              '<w:right w:w="108" w:type="dxa"/>' + 
            '</w:tblCellMar>' + 
          '</w:tblPr>' + 
        '</w:style>' + 
        '<w:style w:type="list" w:default="on" w:styleId="NoList">' + 
          '<w:name w:val="No List"/>' + 
          '<w:semiHidden/>' + 
        '</w:style>' + 
      '</w:styles>' + 
      '<w:docPr>' + 
        '<w:view w:val="print"/>' + 
        '<w:zoom w:percent="100"/>' + 
        '<w:doNotEmbedSystemFonts/>' + 
        '<w:proofState w:spelling="clean" w:grammar="clean"/>' + 
        '<w:attachedTemplate w:val=""/>' + 
        '<w:defaultTabStop w:val="720"/>' + 
        '<w:drawingGridHorizontalSpacing w:val="187"/>' + 
        '<w:drawingGridVerticalSpacing w:val="187"/>' + 
        '<w:displayHorizontalDrawingGridEvery w:val="0"/>' + 
        '<w:displayVerticalDrawingGridEvery w:val="0"/>' + 
        '<w:useMarginsForDrawingGridOrigin/>' + 
        '<w:drawingGridHorizontalOrigin w:val="1699"/>' + 
        '<w:drawingGridVerticalOrigin w:val="1987"/>' + 
        '<w:characterSpacingControl w:val="DontCompress"/>' + 
        '<w:optimizeForBrowser/>' + 
        '<w:validateAgainstSchema/>' + 
        '<w:saveInvalidXML w:val="off"/>' + 
        '<w:ignoreMixedContent w:val="off"/>' + 
        '<w:alwaysShowPlaceholderText w:val="off"/>' + 
        '<w:compat>' + 
          '<w:footnoteLayoutLikeWW8/>' + 
          '<w:shapeLayoutLikeWW8/>' + 
          '<w:alignTablesRowByRow/>' + 
          '<w:forgetLastTabAlignment/>' + 
          '<w:doNotUseHTMLParagraphAutoSpacing/>' + 
          '<w:layoutRawTableWidth/>' + 
          '<w:layoutTableRowsApart/>' + 
          '<w:useWord97LineBreakingRules/>' + 
          '<w:dontAllowFieldEndSelect/>' + 
          '<w:useWord7000000001nVleRules/>' + 
        '</w:compat>' + 
      '</w:docPr>' + 
      '<w:body>' + 
        '<wx:sect>' + 
          '<w:tbl>' + 
            '<w:tblPr>' + 
              '<w:tblW w:w="0" w:type="auto"/>' + 
              '<w:tblLayout w:type="Fixed"/>' + 
              '<w:tblCellMar>' + 
                '<w:left w:w="15" w:type="dxa"/>' + 
                '<w:right w:w="15" w:type="dxa"/>' + 
              '</w:tblCellMar>' + 
            '</w:tblPr>' + 
            '<w:tblGrid>' + 
              '<w:gridCol w:w="5760"/>' + 
              '<w:gridCol w:w="270"/>' + 
              '<w:gridCol w:w="5760"/>' + 
            '</w:tblGrid>';
	return t;
}
	
function makeHeader_5162() {
	var t = 
	'<?xml version="1.0" encoding="' + Encoding + '" standalone="yes"?>' + '\n' +
    '<?mso-application progid="Word.Document"?>' + '\n' +
    '<w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:sl="http://schemas.microsoft.com/schemaLibrary/2003/core" xmlns:aml="http://schemas.microsoft.com/aml/2001/core" xmlns:wx="http://schemas.microsoft.com/office/word/2003/auxHint" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" w:macrosPresent="no" w:embeddedObjPresent="no" w:ocxPresent="no" xml:space="preserve">' + 
      '<o:DocumentProperties>' + 
        '<o:Title>' + 
'Avery Templates' +
        '</o:Title>' + 
        '<o:Subject>' + 
'Avery Templates' +
        '</o:Subject>' + 
        '<o:Author>' + 
'Avery Dennison Corporation' +
        '</o:Author>' + 
        '<o:Keywords>' + 
'Avery Templates' +
        '</o:Keywords>' + 
        '<o:Description>' + 
'Copyright 2004 Avery Dennison Corporation. All rights reserved.' +
        '</o:Description>' + 
        '<o:LastAuthor>' + 
'Steve Bower' +
        '</o:LastAuthor>' + 
        '<o:Revision>' + 
'1' +
        '</o:Revision>' + 
        '<o:TotalTime>' + 
'1' +
        '</o:TotalTime>' + 
        '<o:Created>' + 
'2006-08-19T01:54:00Z' +
        '</o:Created>' + 
        '<o:LastSaved>' + 
'2006-08-19T01:54:00Z' +
        '</o:LastSaved>' + 
        '<o:Pages>' + 
        '</o:Pages>' + 
        '<o:Words>' + 
        '</o:Words>' + 
        '<o:Characters>' + 
        '</o:Characters>' + 
        '<o:Category>' + 
'Avery Templates' +
        '</o:Category>' + 
        '<o:Company>' + 
'Avery Dennison Corporation' +
        '</o:Company>' + 
        '<o:Lines>' + 
        '</o:Lines>' + 
        '<o:Paragraphs>' + 
        '</o:Paragraphs>' + 
        '<o:CharactersWithSpaces>' + 
        '</o:CharactersWithSpaces>' + 
        '<o:Version>' + 
'11.6568' +
        '</o:Version>' + 
      '</o:DocumentProperties>' + 
      '<w:fonts>' + 
        '<w:defaultFonts w:ascii="Times New Roman" w:fareast="Times New Roman" w:h-ansi="Times New Roman" w:cs="Times New Roman"/>' + 
      '</w:fonts>' + 
      '<w:styles>' + 
        '<w:versionOfBuiltInStylenames w:val="4"/>' + 
        '<w:latentStyles w:defLockedState="off" w:latentStyleCount="156"/>' + 
        '<w:style w:type="paragraph" w:default="on" w:styleId="Normal">' + 
          '<w:name w:val="Normal"/>' + 
          '<w:pPr>' + 
            '<w:jc w:val="center"/>' + 
          '</w:pPr>' + 
          '<w:rPr>' + 
            '<w:rFonts w:ascii="Arial" w:h-ansi="Arial"/>' + 
            '<wx:font wx:val="Arial"/>' + 
            '<w:b/>' + 
            '<w:lang w:val="EN-US" w:fareast="EN-US" w:bidi="AR-SA"/>' + 
          '</w:rPr>' + 
        '</w:style>' + 
        '<w:style w:type="character" w:default="on" w:styleId="DefaultParagraphFont">' + 
          '<w:name w:val="Default Paragraph Font"/>' + 
          '<w:semiHidden/>' + 
        '</w:style>' + 
        '<w:style w:type="table" w:default="on" w:styleId="TableNormal">' + 
          '<w:name w:val="Normal Table"/>' + 
          '<wx:uiName wx:val="Table Normal"/>' + 
          '<w:semiHidden/>' + 
          '<w:rPr>' + 
            '<wx:font wx:val="Times New Roman"/>' + 
          '</w:rPr>' + 
          '<w:tblPr>' + 
            '<w:tblInd w:w="0" w:type="dxa"/>' + 
            '<w:tblCellMar>' + 
              '<w:top w:w="0" w:type="dxa"/>' + 
              '<w:left w:w="108" w:type="dxa"/>' + 
              '<w:bottom w:w="0" w:type="dxa"/>' + 
              '<w:right w:w="108" w:type="dxa"/>' + 
            '</w:tblCellMar>' + 
          '</w:tblPr>' + 
        '</w:style>' + 
        '<w:style w:type="list" w:default="on" w:styleId="NoList">' + 
          '<w:name w:val="No List"/>' + 
          '<w:semiHidden/>' + 
        '</w:style>' + 
      '</w:styles>' + 
      '<w:docPr>' + 
        '<w:view w:val="print"/>' + 
        '<w:zoom w:percent="100"/>' + 
        '<w:doNotEmbedSystemFonts/>' + 
        '<w:proofState w:spelling="clean" w:grammar="clean"/>' + 
        '<w:attachedTemplate w:val=""/>' + 
        '<w:defaultTabStop w:val="720"/>' + 
        '<w:drawingGridHorizontalSpacing w:val="187"/>' + 
        '<w:drawingGridVerticalSpacing w:val="187"/>' + 
        '<w:displayHorizontalDrawingGridEvery w:val="0"/>' + 
        '<w:displayVerticalDrawingGridEvery w:val="0"/>' + 
        '<w:useMarginsForDrawingGridOrigin/>' + 
        '<w:drawingGridHorizontalOrigin w:val="1699"/>' + 
        '<w:drawingGridVerticalOrigin w:val="1987"/>' + 
        '<w:characterSpacingControl w:val="DontCompress"/>' + 
        '<w:optimizeForBrowser/>' + 
        '<w:validateAgainstSchema/>' + 
        '<w:saveInvalidXML w:val="off"/>' + 
        '<w:ignoreMixedContent w:val="off"/>' + 
        '<w:alwaysShowPlaceholderText w:val="off"/>' + 
        '<w:compat>' + 
          '<w:footnoteLayoutLikeWW8/>' + 
          '<w:shapeLayoutLikeWW8/>' + 
          '<w:alignTablesRowByRow/>' + 
          '<w:forgetLastTabAlignment/>' + 
          '<w:doNotUseHTMLParagraphAutoSpacing/>' + 
          '<w:layoutRawTableWidth/>' + 
          '<w:layoutTableRowsApart/>' + 
          '<w:useWord97LineBreakingRules/>' + 
          '<w:dontAllowFieldEndSelect/>' + 
          '<w:useWord7000000001nVleRules/>' + 
        '</w:compat>' + 
      '</w:docPr>' + 
      '<w:body>' + 
        '<wx:sect>' + 
          '<w:tbl>' + 
            '<w:tblPr>' + 
              '<w:tblW w:w="0" w:type="auto"/>' + 
              '<w:tblLayout w:type="Fixed"/>' + 
              '<w:tblCellMar>' + 
                '<w:left w:w="15" w:type="dxa"/>' + 
                '<w:right w:w="15" w:type="dxa"/>' + 
              '</w:tblCellMar>' + 
            '</w:tblPr>' + 
            '<w:tblGrid>' + 
              '<w:gridCol w:w="5760"/>' + 
              '<w:gridCol w:w="270"/>' + 
              '<w:gridCol w:w="5760"/>' + 
            '</w:tblGrid>';
	return t;
} 

function makeHeader_5163() {
	var t = 
	'<?xml version="1.0" encoding="' + Encoding + '" standalone="yes"?>' + '\n' +
    '<?mso-application progid="Word.Document"?>' + '\n' +
    '<w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:sl="http://schemas.microsoft.com/schemaLibrary/2003/core" xmlns:aml="http://schemas.microsoft.com/aml/2001/core" xmlns:wx="http://schemas.microsoft.com/office/word/2003/auxHint" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882" xmlns:st1="urn:schemas-microsoft-com:office:smarttags" w:macrosPresent="no" w:embeddedObjPresent="no" w:ocxPresent="no" xml:space="preserve">' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="State"/>' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="place"/>' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="City"/>' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="Street"/>' + 
      '<o:SmartTagType o:namespaceuri="urn:schemas-microsoft-com:office:smarttags" o:name="address"/>' + 
      '<o:DocumentProperties>' + 
        '<o:Title>' + 
'Avery Templates' +
        '</o:Title>' + 
        '<o:Subject>' + 
'Avery Dennison Corporation' +
        '</o:Subject>' + 
        '<o:Author>' + 
'Avery Dennison Corporation' +
        '</o:Author>' + 
        '<o:Keywords>' + 
'Avery Templates' +
        '</o:Keywords>' + 
        '<o:Description>' + 
'Copyright 2004 Avery Dennison Corporation. All rights reserved.' +
        '</o:Description>' + 
        '<o:LastAuthor>' + 
'Steve Bower' +
        '</o:LastAuthor>' + 
        '<o:Revision>' + 
'1' +
        '</o:Revision>' + 
        '<o:TotalTime>' + 
'1' +
        '</o:TotalTime>' + 
        '<o:Created>' + 
'2006-08-19T01:52:00Z' +
        '</o:Created>' + 
        '<o:LastSaved>' + 
'2006-08-19T01:52:00Z' +
        '</o:LastSaved>' + 
        '<o:Pages>' + 
        '</o:Pages>' + 
        '<o:Words>' + 
        '</o:Words>' + 
        '<o:Characters>' + 
        '</o:Characters>' + 
        '<o:Category>' + 
'Avery Templates' +
        '</o:Category>' + 
        '<o:Company>' + 
'Avery Dennison Corporation' +
        '</o:Company>' + 
        '<o:Lines>' + 
'3' +
        '</o:Lines>' + 
        '<o:Paragraphs>' + 
'1' +
        '</o:Paragraphs>' + 
        '<o:CharactersWithSpaces>' + 
'562' +
        '</o:CharactersWithSpaces>' + 
        '<o:Version>' + 
'11.6568' +
        '</o:Version>' + 
      '</o:DocumentProperties>' + 
      '<w:fonts>' + 
        '<w:defaultFonts w:ascii="Times New Roman" w:fareast="Times New Roman" w:h-ansi="Times New Roman" w:cs="Times New Roman"/>' + 
      '</w:fonts>' + 
      '<w:styles>' + 
        '<w:versionOfBuiltInStylenames w:val="4"/>' + 
        '<w:latentStyles w:defLockedState="off" w:latentStyleCount="156"/>' + 
        '<w:style w:type="paragraph" w:default="on" w:styleId="Normal">' + 
          '<w:name w:val="Normal"/>' + 
          '<w:pPr>' + 
            '<w:jc w:val="center"/>' + 
          '</w:pPr>' + 
          '<w:rPr>' + 
            '<w:rFonts w:ascii="Arial" w:h-ansi="Arial"/>' + 
            '<wx:font wx:val="Arial"/>' + 
            '<w:b/>' + 
            '<w:lang w:val="EN-US" w:fareast="EN-US" w:bidi="AR-SA"/>' + 
          '</w:rPr>' + 
        '</w:style>' + 
        '<w:style w:type="character" w:default="on" w:styleId="DefaultParagraphFont">' + 
          '<w:name w:val="Default Paragraph Font"/>' + 
          '<w:semiHidden/>' + 
        '</w:style>' + 
        '<w:style w:type="table" w:default="on" w:styleId="TableNormal">' + 
          '<w:name w:val="Normal Table"/>' + 
          '<wx:uiName wx:val="Table Normal"/>' + 
          '<w:semiHidden/>' + 
          '<w:rPr>' + 
            '<wx:font wx:val="Times New Roman"/>' + 
          '</w:rPr>' + 
          '<w:tblPr>' + 
            '<w:tblInd w:w="0" w:type="dxa"/>' + 
            '<w:tblCellMar>' + 
              '<w:top w:w="0" w:type="dxa"/>' + 
              '<w:left w:w="108" w:type="dxa"/>' + 
              '<w:bottom w:w="0" w:type="dxa"/>' + 
              '<w:right w:w="108" w:type="dxa"/>' + 
            '</w:tblCellMar>' + 
          '</w:tblPr>' + 
        '</w:style>' + 
        '<w:style w:type="list" w:default="on" w:styleId="NoList">' + 
          '<w:name w:val="No List"/>' + 
          '<w:semiHidden/>' + 
        '</w:style>' + 
      '</w:styles>' + 
      '<w:divs>' + 
        '<w:div w:id="469446233">' + 
          '<w:bodyDiv w:val="on"/>' + 
          '<w:marLeft w:val="0"/>' + 
          '<w:marRight w:val="0"/>' + 
          '<w:marTop w:val="0"/>' + 
          '<w:marBottom w:val="0"/>' + 
          '<w:divBdr>' + 
            '<w:top w:val="none" w:sz="0" wx:bdrwidth="0" w:space="0" w:color="auto"/>' + 
            '<w:left w:val="none" w:sz="0" wx:bdrwidth="0" w:space="0" w:color="auto"/>' + 
            '<w:bottom w:val="none" w:sz="0" wx:bdrwidth="0" w:space="0" w:color="auto"/>' + 
            '<w:right w:val="none" w:sz="0" wx:bdrwidth="0" w:space="0" w:color="auto"/>' + 
          '</w:divBdr>' + 
        '</w:div>' + 
      '</w:divs>' + 
      '<w:docPr>' + 
        '<w:view w:val="print"/>' + 
        '<w:zoom w:percent="100"/>' + 
        '<w:doNotEmbedSystemFonts/>' + 
        '<w:proofState w:spelling="clean" w:grammar="clean"/>' + 
        '<w:attachedTemplate w:val=""/>' + 
        '<w:defaultTabStop w:val="720"/>' + 
        '<w:drawingGridHorizontalSpacing w:val="187"/>' + 
        '<w:drawingGridVerticalSpacing w:val="187"/>' + 
        '<w:displayHorizontalDrawingGridEvery w:val="0"/>' + 
        '<w:displayVerticalDrawingGridEvery w:val="0"/>' + 
        '<w:useMarginsForDrawingGridOrigin/>' + 
        '<w:drawingGridHorizontalOrigin w:val="1699"/>' + 
        '<w:drawingGridVerticalOrigin w:val="1987"/>' + 
        '<w:characterSpacingControl w:val="DontCompress"/>' + 
        '<w:optimizeForBrowser/>' + 
        '<w:validateAgainstSchema/>' + 
        '<w:saveInvalidXML w:val="off"/>' + 
        '<w:ignoreMixedContent w:val="off"/>' + 
        '<w:alwaysShowPlaceholderText w:val="off"/>' + 
        '<w:compat>' + 
          '<w:footnoteLayoutLikeWW8/>' + 
          '<w:shapeLayoutLikeWW8/>' + 
          '<w:alignTablesRowByRow/>' + 
          '<w:forgetLastTabAlignment/>' + 
          '<w:doNotUseHTMLParagraphAutoSpacing/>' + 
          '<w:layoutRawTableWidth/>' + 
          '<w:layoutTableRowsApart/>' + 
          '<w:useWord97LineBreakingRules/>' + 
          '<w:dontAllowFieldEndSelect/>' + 
          '<w:useWord7000000001nVleRules/>' + 
        '</w:compat>' + 
      '</w:docPr>' + 
      '<w:body>' + 
        '<wx:sect>' + 
          '<w:tbl>' + 
            '<w:tblPr>' + 
              '<w:tblW w:w="0" w:type="auto"/>' + 
              '<w:tblLayout w:type="Fixed"/>' + 
              '<w:tblCellMar>' + 
                '<w:left w:w="15" w:type="dxa"/>' + 
                '<w:right w:w="15" w:type="dxa"/>' + 
              '</w:tblCellMar>' + 
            '</w:tblPr>' + 
            '<w:tblGrid>' + 
              '<w:gridCol w:w="5760"/>' + 
              '<w:gridCol w:w="230"/>' + 
              '<w:gridCol w:w="5760"/>' + 
            '</w:tblGrid>';
	return t;
}
	



//-->
		</script>
	</head>
<body class="contact" onLoad="initPage();">
<!-- Main Body Starts Here -->
	<a name="skiplink"><img src="/s.gif" height='1' width='1' alt="Content Starts Here" class="skiplink">
	</a>
	<div class="bPageTitle">
		<div class="ptBody secondaryPalette">
			<div class="content"><img src="/s.gif" alt="" class="pageTitleIcon">
				<h1 class="pageType"> Generate Mailing Labels<span class="titleSeparatingColon"> : </span></h1>
				<h2 class="pageDescription"> Choose Data Source, Avery Label Style, and Destination</h2>
				<div class="blank">&nbsp;</div>
			</div>
			<div class="links"></div>
		</div>
		<div class="ptBreadcrumb"></div>
	</div>
	<form id="LabelForm">
		<div class="bPageBlock bEditBlock secondaryPalette " id="ep">
			<div class="pbHeader">
				<table border="0" cellpadding="0" cellspacing="0">
					<tr>
						<td class="pbTitle">
							<img src="/s.gif" alt="" title="" class="minWidth" height="1" width="1">
							<h2 class="mainTitle">Generate Labels</h2>
						</td>
						<td class="pbButton">
							<input value=" Generate " class="btn" title="Generate" onclick="generate();" name="save" type="button">
							<input value=" Cancel " class="btn" title="Cancel" onclick="goBack();" name="cancel" type="button">
						</td>
					</tr>
				</table>
			</div>
			
			<!-- Handle the Source of the Data -->
			<div class="pbBody">
				<div class="pbSubheader first tertiaryPalette">
					<h3> Source Data<span  class="titleSeparatingColon">:</span></h3>
				</div>
				<div class="pbSubsection">
					<table class="detailClass tableClass" border="0" cellpadding="0" cellspacing="0" width=100>
						<tbody>
						<tr>
							<td class="labelCol" > 
								<label> I'm generating mailing labels based on: </label>
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="ParentType" name="ParentType" type="text" 
								size="9" readonly >
								&nbsp;&nbsp;Name
								<span  class="titleSeparatingColon">:Name</span>
								<input tabindex="1" id="ParentName" name="ParentName" type="text" 
								size="60" readonly >
							</td>
						</tr>
						<tr>
							<td class="labelCol"> 
								<label> For a Campaign (or Appeal), Choose Contacts and/or Leads </label>
							</td>
							<td class="dataCol">
								<input id="CampaignContactsOrLeads_Contacts" 
									name="CampaignSourceSelection" type="radio" checked>
								Contacts
								&nbsp&nbsp
								<input id="CampaignContactsOrLeads_Leads" 
									name="CampaignSourceSelection" type="radio" onClick='loadCacheWithObject("lead");'>   
								Leads
								&nbsp&nbsp
								<input id="CampaignContactsOrLeads_Both" 
									name="CampaignSourceSelection" type="radio" onClick='loadCacheWithObject("lead");'>                                  
								Both
							</td>
						</tr>
						<tr>
							<td class="labelCol"> 
								<label> Check if you are using the Non-Profit Template </label>
							</td>
							<td class="dataCol">
								<input id="TemplateType_Standard" name="TemplateType" type="radio" checked>
								Standard
								&nbsp&nbsp
								<input id="TemplateType_NonProfit" name="TemplateType" type="radio"'>  
								Non-Profit                                  
							</td>
						</tr>
					
						</tbody>
					</table>
				</div>
			</div>

			<!-- Handle the Selection of which Avery Label style -->
			<div class="pbBody">
				<div class="pbSubheader first tertiaryPalette">
					<h3> Label Style<span  class="titleSeparatingColon">:</span></h3>
					<br><br>
					Choose one or more styles: (Note: These are Avery style numbers)
				</div>
				<div class="pbSubsection">
					<table class="detailClass tableClass" border="0" cellpadding="0" cellspacing="0" width=100>
						<tbody>
						<tr>
							<td class="labelCol" > 
								<img src="http://www.avery.com//us/images/software/templates/blank/la08160bus1.gif">
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="select_5160" name="select_5160" type="checkbox"> 
							</td>
							<td class="labelCol" > 
								<label>15160, 18160, 18660, 5160, 5260, 5520, 5960, 8160, 8250, 8460</label>
								<br><br>
								<label>Address Labels - 1" x 2-5/8" - 30</label>								
							</td>
						</tr>

						<tr>
							<td class="labelCol" >
								<img src="http://www.avery.com//us/images/software/templates/blank/la08161bus1.gif">
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="select_5161" name="select_5161" type="checkbox"> 
							</td>
							<td class="labelCol" > 
								<label>5161, 5261, 5961, 8161, 8461</label>
								<br><br>
								<label>Address Labels - 1" x 4" - 20</label>
							</td>
						</tr>
						<tr>
							<td class="labelCol" > 
								<img src="http://www.avery.com//us/images/software/templates/blank/la08162bus1.gif">
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="select_5162" name="select_5162" type="checkbox"> 
							</td>
							<td class="labelCol" >
								<label>15162, 18162, 18662, 5162, 5262, 5522, 5962, 8162, 8252, 8462</label>
								<br><br>
								<label>Address Labels - 1-1/3" x 4" - 14</label>
							</td>
						</tr>
						<tr>
							<td class="labelCol" > 
								<img src="http://www.avery.com//us/images/software/templates/blank/la08163bus1.gif">
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="select_5163" name="select_5163" type="checkbox"> 
							</td>
							<td class="labelCol" > 
								<label>15163, 18163, 5163, 5263, 5523, 5963, 5978, 8163, 8253, 8463, 8763</label>
								<br><br>
								<label>Shipping Labels - 2" x 4" - 10 labels per sheet - Landscape</label>
							</td>
						</tr>
						<tr><td>&nbsp;</td></tr>

						<tr>
							<td></td>
							<td class="labelCol" >
								How do you want the labels printed:
							</td>
							<td class="dataCol">
								<input tabindex="1" id="Centered" name="LabelJustification"
								type="radio" checked>
								Centered
								&nbsp
								&nbsp								
								<input tabindex="1" id="Left" name="LabelJustification"
								type="radio">
								Left Justified:
							</td>
						</tr>

						<tr>
							<td></td>
							<td class="labelCol" >
								Select where on the page to start printing:
							</td>
							<td class="dataCol">
								Row:
								<input id="startRow" name="startRow" type="text" size="1" value="1">
								Column:
								<input id="startCol" name="startCol" type="text" size="1" value="1">
							</td>
						</tr>
						</tbody>
					</table>
				</div>
			</div>		
			
			<!-- Handle the Destination of which Avery Label style -->
			<div class="pbBody">
				<div class="pbSubheader first tertiaryPalette">
					<h3> Destination<span  class="titleSeparatingColon">:</span></h3>
					<br><br>
					The generated files will be saved to the specified destination either as an 
					attachment to the current object, or in an exiting Folder.
					<br><br>
					The style of label, and the Base Name are used to create the filename. 
					(ex. Run_for_a_Cure_Campaign_Contacts_Labels_5162.doc)
					<br><br>
					To use the resulting file, View it using Microsoft Word.
				</div>
				<div class="pbSubsection">
					<table class="detailClass tableClass" border="0" cellpadding="0" cellspacing="0" width=100>
						<tbody>
						<tr>
							<td class="labelCol" > 
								Save as an attachment?
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="AttachmentCheckbox" name="AttachmentOrFolder"
								type="radio" checked> 
							</td>
						</tr>
						<tr>
							<td class="labelCol" > 
								Save to a folder?								
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="FolderCheckbox" name="AttachmentOrFolder"
								type="radio" onClick="loadFolderNames();">
							</td>
							<td class="labelCol" > 
								Select Folder:								
							</td>
							<td class="dataCol col02">
								<select tabindex="1" id="FolderList" name="FolderList"></select>
							</td>
						</tr>

						<tr>
							<td class="labelCol" >
								Base Name:
							</td>
							<td class="dataCol"> 
								<input tabindex="1" id="baseName" name="baseName" type="text" size="60" value=""> 
							</td>
						</tr>
						<tr><td>&nbsp;</td></tr>
						</tbody>
					</table>
				</div>
			</div>

<style>
.Steve {
	color:red; font-family:Arial, Helvetica, sans-serif; 
	font-size:16px; font-style:italic; text-align:center; width: 100%;
	}
</style>


			<div class="pbBottomButtons bottomRow">
<span class="Steve">
				Courtesy of <a href="mailto:sforce@stevebower.com">Steve Bower </a>, freelance programmer.   
				Please let me know if this has proved helpful.
				<br>
				<br>
</span>
				<table  class = "tableClass" cellpadding="0" cellspacing="0" border="0">
					<tr>
						<td class="pbTitle">
							<img src="/s.gif" alt="" title="" width=1 height=1 class="minWidth">&nbsp;
						</td>
						<td class="pbButtonb">
							<input value=" Generate "  class="btn" type="button" title="Generate" 
								name="save" onClick="generate();">
							<input value=" Cancel "  class="btn" type="button" title="Cancel" 
								name="cancel" onClick="goBack();">
						</td>
					</tr>
				</table>
			</div>
			<div class="pbFooter secondaryPalette">
				<div class="bg"></div>
			</div>
		</div>
	</form>
</body>
</html>